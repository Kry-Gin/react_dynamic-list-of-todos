{"version":3,"sources":["types/FilterType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterType","TodoList","todos","selectedTodo","onSelect","className","map","id","title","completed","userId","classNames","type","onClick","TodoFilter","query","onChangeQuery","filter","onSelectFilter","value","onChange","event","target","ACTIVE","COMPLETED","ALL","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","statusText","json","Loader","TodoModal","todo","onClose","useState","user","setUser","useEffect","getUsersFromServer","a","receivedUser","href","email","name","App","setTodos","isLoaded","setIsLoaded","setSelectedTodo","setQuery","setFilter","getTodosFromServer","todosFromServer","visibleTodos","filteredByTitle","toLowerCase","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4ce6e95.chunk.js","sourcesContent":["export enum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelect: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({\n        id,\n        title,\n        completed,\n        userId,\n      }) => {\n        return (\n          <tr data-cy=\"todo\" className=\"\" key={id}>\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect({\n                  id,\n                  title,\n                  completed,\n                  userId,\n                })}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': id !== selectedTodo?.id,\n                    'fa-eye-slash': id === selectedTodo?.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { FilterType } from '../../types/FilterType';\n\ninterface Props {\n  query: string,\n  onChangeQuery: (query: string) => void,\n  filter: FilterType,\n  onSelectFilter: (filter: FilterType) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  filter,\n  onSelectFilter,\n}) => {\n  const handleFilterSelection = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    switch (event.target.value) {\n      case FilterType.ACTIVE:\n        onSelectFilter(FilterType.ACTIVE);\n        break;\n\n      case FilterType.COMPLETED:\n        onSelectFilter(FilterType.COMPLETED);\n        break;\n\n      default:\n        onSelectFilter(FilterType.ALL);\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleFilterSelection}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onChangeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              value={query}\n              onClick={() => onChangeQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User>();\n\n  const { id, title, completed } = todo;\n\n  useEffect(() => {\n    const getUsersFromServer = async () => {\n      const receivedUser = await getUser(todo.userId);\n\n      setUser(receivedUser);\n    };\n\n    getUsersFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/FilterType';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nconst getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  filter: FilterType,\n) => {\n  return todos.filter(todo => {\n    const filteredByTitle = todo.title.toLowerCase().includes(query.toLowerCase());\n\n    switch (filter) {\n      case FilterType.ACTIVE:\n        return !todo.completed && filteredByTitle;\n\n      case FilterType.COMPLETED:\n        return todo.completed && filteredByTitle;\n\n      default:\n        return filteredByTitle;\n    }\n  });\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(FilterType.ALL);\n\n  useEffect(() => {\n    const getTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsLoaded(true);\n    };\n\n    getTodosFromServer();\n  }, []);\n\n  const clearSelectedTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const visibleTodos = getFilteredTodos(todos, query, filter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onChangeQuery={setQuery}\n                filter={filter}\n                onSelectFilter={setFilter}\n              />\n            </div>\n\n            {isLoaded\n              ? (\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelect={setSelectedTodo}\n                  />\n                </div>\n              )\n              : <Loader />}\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => clearSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}